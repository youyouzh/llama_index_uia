[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=23.7.0,<=24.3.0",
    "codespell[toml]>=v2.2.6",
    "diff-cover>=9.2.0",
    "mypy==1.11.0",
    "pre-commit==3.2.0",
    "pylint==2.15.10",
    "pytest~=7.2",
    "pytest-asyncio==0.21.0",
    "pytest-cov~=5.0",
    "pytest-dotenv==0.5.2",
    "pytest-mock==3.11.1",
    "rake-nltk==1.0.6",
    "ruff==0.11.11",
    "tree-sitter",
    "tree-sitter-language-pack",
    "types-Deprecated>=0.1.0",
    "types-PyYAML>=6.0.12.12,<7",
    "types-requests>=2.28.11.8",
]

[project]
name = "uia"
version = "0.0.1"
description = "Unify Intelligent Assistant with LLM, Multi-Agent"
authors = [{name = "uusama", email = ""}]
requires-python = ">=3.10,<4.0"
readme = "README.md"
license = "MIT"
maintainers = [
    {name = "uusama", email = ""},
]
keywords = ["LLM", "Agent", "RAG"]
classifiers = [
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "typing-extensions>=4.5.0",
    "typing-inspect>=0.8.0",
    "tqdm>=4.66.1,<5",
    "pydantic>=2.8.0",
    "tenacity>=8.2.0,!=8.4.0,<10.0.0",
    "dirtyjson>=1.0.8,<2",
    "httpx>=0.28.1",
    "requests>=2.31.0",
    "aiohttp>=3.8.6,<4",
    "tiktoken>=0.7.0",
    "aiosqlite",
    "dataclasses-json",
    "SQLAlchemy[asyncio]>=1.4.49",
    "deprecated>=1.2.9.3",
    "setuptools>=80.9.0",
]

[project.urls]
Homepage = "http://10.190.2.28:9091/zhaohai/uia"
Repository = "http://10.190.2.28:9091/zhaohai/uia"
Documentation = "http://10.190.2.28:9091/zhaohai/uia"

[tool.codespell]
check-filenames = true
check-hidden = true
ignore-words-list = "astroid,gallary,momento,narl,ot,rouge"
# Feel free to un-skip examples, and experimental, you will just need to
# work through many typos (--write-changes and --interactive will help)
skip = "./llama_index/core/_static,./examples,./experimental,*.csv,*.html,*.json,*.jsonl,*.pdf,*.txt,*.ipynb"

[tool.coverage.run]
omit = [
    "llama_index/core/instrumentation/*",
    "llama_index/core/workflow/*",
    "tests/*",
]

[tool.hatch.build.targets.sdist]
include = [
    "llama_index",
    "llama_index/core/_static/nltk_cache/corpora/stopwords/**",
    "llama_index/core/_static/nltk_cache/tokenizers/punkt_tab/**",
    "llama_index/core/_static/tiktoken_cache/**",
]
exclude = ["**/BUILD"]

[tool.hatch.build.targets.wheel]
include = [
    "llama_index",
    "llama_index/core/_static/nltk_cache/corpora/stopwords/**",
    "llama_index/core/_static/nltk_cache/tokenizers/punkt_tab/**",
    "llama_index/core/_static/tiktoken_cache/**",
]
exclude = ["**/BUILD"]

[tool.mypy]
disallow_untyped_defs = true
# Remove venv skip when integrated with pre-commit
exclude = ["_static", "build", "examples", "notebooks", "venv"]
explicit_package_bases = true
ignore_missing_imports = true
namespace_packages = true
plugins = "pydantic.mypy"
python_version = "3.10"

[tool.tomlsort]
all = true
in_place = true
spaces_before_inline_comment = 2  # Match Python PEP 8
spaces_indent_inline_array = 4  # Match Python PEP 8
trailing_comma_inline_array = true

[tool.tomlsort.overrides."tool.poetry.dependencies"]
table_keys = false

[tool.uv]

[[tool.uv.index]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
default = true

[[tool.uv.index]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"
explicit = true
